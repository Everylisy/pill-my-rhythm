openapi: 3.0.3
info:
  version: 0.0.1
  title: Web API docs
  description: team 17 API 문서입니다
  license:
    name: MIT
servers:
  - url: http://localhost:5000/
tags:
  - name: user
  - description: User API 입니다.
  - name: recommend
  - description: User가 추천받은 영양제 정보 API 입니다.
  - name: schedule
  - description: User 영양제 스케줄 및 생체리듬 관리 API 입니다.
  - name: bookmark
  - description: User BookMark API 입니다.
paths:
  /user/register:
    $ref: "./paths/user.yaml#/~1user~1register"
  /user/login:
    $ref: "./paths/user.yaml#/~1user~1login"
  /user/logout:
    $ref: "./paths/user.yaml#/~1user~1logout"
  /user/update-info:
    $ref: "./paths/user.yaml#/~1user~1update-info"
  /user/withdrawal:
    $ref: "./paths/user.yaml#/~1user~1withdrawal"
  /user/current:
    $ref: "./paths/user.yaml#/~1user~1current"
  /user/refresh:
    $ref: "./paths/user.yaml#/~1user~1refresh"
  /schedule:
    $ref: "./paths/schedule.yaml#/~1schedule"
  /schedule/week:
    $ref: "./paths/schedule.yaml#/~1schedule~1week"
  /schedule/create:
    $ref: "./paths/schedule.yaml#/~1schedule~1create"
  /schedule/daily-supplement:
    $ref: "./paths/schedule.yaml#/~1schedule~1daily-supplement"
  /schedule/daily-supplement/{plan_id}:
    $ref: "./paths/schedule.yaml#/~1schedule~1daily-supplement~1{plan_id}"
  /checklist/create:
    $ref: "./paths/schedule.yaml#/~1checklist~1create"
  /bookmark:
    $ref: "./paths/bookmark.yaml#/~1bookmark"
  /bookmark/create/{supplement_id}:
    $ref: "./paths/bookmark.yaml#/~1bookmark~1create~1{supplement_id}"
components:
  schemas:
    User:
      type: object
      required:
        - user_name
        - email
        - password
      properties:
        user_name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        gender:
          type: string
          enum: [M, F]
        age_range:
          type: string
        job:
          type: string
    Error:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
  responses:
    successResponse:
      description: successful request
      content:
        application/json:
          schema:
            type: object
            properties:
    BadRequest:
      description: bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerError:
      description: server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
