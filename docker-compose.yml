version: '3.8'
services:
  # frontend_server:
  #   restart: 'on-failure'
  #   build:
  #     context: './front'
  #     dockerfile: Dockerfile
  #   container_name: 'react-pill-my-rhythm-app'
  #   ports:
  #     - 80:80
  #     - 443:443
  #   links:
  #     - redis_server
  #     - backend_server
  #   volumes:
  #     - ./front/nginx.conf:/etc/nginx/conf.d/nginx.conf
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot

  frontend_server:
    image: tbr06057/react-pill-my-rhythm-app:test1
    restart: 'on-failure'
    volumes:
      - ./front/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  # backend_server:
  #   restart: 'on-failure'
  #   build:
  #     context: './back'
  #     dockerfile: Dockerfile
  #   container_name: 'node-pill-my-rhythm-app'
  #   ports:
  #     - 5000:5000
  #   links:
  #     - redis_server
  #   env_file:
  #     - './back/.env'

  backend_server:
    image: tbr06057/node-pill-my-rhythm-app:test
    restart: 'on-failure'
    ports:
      - 5000:5000

  redis_server:
    restart: 'on-failure'
    image: redis:alpine
    container_name: 'redis-app'
  # ai_server:
  #   restart: 'on-failure'
  #   build:
  #     context: './ai'
  #     dockerfile: Dockerfile
  #   container_name: 'python-pill-my-rhythm-app'
  #   ports:
  #     - 5002:5002
  #   links:
  #     - backend_server
  ai_server:
    image: tbr06057/python-pill-my-rhythm-app:test
    restart: 'on-failure'
    ports:
      - 5002:5002
